@inject NavigationManager _myNavigationManager
@inject IEthereumHostProvider _metamaskHostProvider;
@inject NethereumAuthenticator  _nethereumAuthenticator;
@inject IJSRuntime jsRuntime;
@inject IMetamaskService _metamaskService;
@using MetaAuth.Metamask.Blazor
@using MetaAuth.Metamask.Ethereum
@using MetaAuth.MTA

@page "/"

<PageTitle>Index</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Hello, world!</MudText>

@if (_metamaskAvailable && !string.IsNullOrEmpty(_metamaskService.SelectedAccount))
{
    @_metamaskService.SelectedAccount;
}

@if (_metamaskAvailable && string.IsNullOrEmpty(_metamaskService.SelectedAccount))
{
    <MudButton Variant="Variant.Filled" OnClick="_metamaskService.EnableEthereumAsync">Connect Metamask</MudButton>
}

@if (!_metamaskAvailable)
{
    <p>Please install Metamask</p>
}

<MudText Class="mb-8">Welcome to your new app, powered by MudBlazor!</MudText>
<MudAlert Severity="Severity.Normal">You can find documentation and examples on our website here: <MudLink Href="https://mudblazor.com" Typo="Typo.body2" Color="Color.Inherit"><b>www.mudblazor.com</b></MudLink></MudAlert>

@code {

    private bool _metamaskAvailable;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _metamaskAvailable = await _metamaskService.CheckMetamaskAvailable();
            StateHasChanged();
        }
    }

}
